{"_type":{"location":"server","name":"chart"},"owner":4,"key":1025,"permission":{"switch":"publish","list":[{"target":null,"type":"global","perm":"fork","displayname":"Everyone","username":"and anonymous user"}]},"name":"Scatter Plot","theme":null,"parent":null,"description":"a standard scatter plot. can be used to visualize two data dimension and show their correlation.","basetype":["18"],"visualencoding":["1","6"],"category":["1","4","5"],"tags":["correlation","distribution","basic"],"likes":null,"searchable":true,"doc":{"name":"document","size":0,"type":"html","lines":1,"content":""},"style":{"name":"stylesheet","size":62,"type":"css","lines":5,"content":".domain {\n  fill: none;\n  stroke: #000;\n  storke-width: 1px;\n}"},"code":{"name":"code","size":10350,"type":"javascript","lines":231,"content":"{\n  sample: function() {\n    var count = 90 + Math.round(Math.random() * 200);\n    var x = [{name: \"X\", data: d3.range(count).map(function() { return Math.random(); })}];\n    var y = [{name: \"Y\", data: d3.range(count).map(function() { return Math.random(); })}];\n    var radius = [{name: \"Radius\", data: d3.range(count).map(function() { return Math.random(); })}];\n    var category = [{name: \"Category\", data: d3.range(count).map(function() { return plotdb.data.sample.category.rand(); })}];\n    var name = [{name: \"Name\", data: d3.range(count).map(function() { return plotdb.data.sample.name.rand(); })}];\n    return {x: x, y: y, radius: radius, category: category, name: name};\n  },\n  dimension: {\n    radius: { type: [plotdb.Number], require: true, desc: \"radius of circle\" },\n    x: { type: [plotdb.Number], require: true, desc: \"x axis of circle\"},\n    y: { type: [plotdb.Number], require: true, desc: \"y axis of circle\"},\n    category: { type: [], require: false, desc: \"category of circle\"},\n    name: { type: [], require: false, desc: \"name of circle\"}\n  },\n  config: {\n    fontFamily: {},\n    background: {},\n    textFill: {},\n    fontSize: {},\n    margin: {},\n    padding: {},\n    palette: {},\n    legendShow: {},\n    legendLabel: {},\n    bubbleStroke: {},\n    bubbleStrokeWidth: {},\n    bubbleSizeMax: {},\n    gridBackground: {},\n    gridStroke: {},\n    gridStrokeWidth: {},\n    gridShow: {},\n    gridDashArray: {},\n    gridFrameStroke: {},\n    gridFrameStrokeWidth: {},\n    yAxisShow: {},\n    yAxisLabel: {},\n    yAxisTickSizeInner: {},\n    yAxisTickSizeOuter: {},\n    yAxisTickPadding: {},\n    yAxisTickCount: {},\n    yAxisLabelPosition: {},\n    yAxisStroke: {},\n    xAxisShow: {},\n    xAxisLabel: {},\n    xAxisTickSizeInner: {},\n    xAxisTickSizeOuter: {},\n    xAxisTickPadding: {},\n    xAxisTickCount: {},\n    xAxisStroke: {},\n    xAxisLabelPosition: {},\n  },\n  init: function() {\n    var that = this;\n    this.svg = d3.select(this.root).append(\"svg\");\n    this.frame = this.svg.append(\"rect\").attr({class: \"grid frame\"});\n    this.frameInner = this.svg.append(\"rect\").attr({class: \"grid frame inner\"});\n    this.xAxisGroup = this.svg.append(\"g\").attr({class: \"axis horizontal\"});\n    this.yAxisGroup = this.svg.append(\"g\").attr({class: \"axis vertical\"});\n    this.gridGroup = this.svg.append(\"g\").attr({class: \"grid-group\"});\n    this.legendGroup = this.svg.append(\"g\").attr({class: \"legend-group\"});\n    this.popup = plotd3.html.tooltip(this.root).on(\"mousemove\", function(d,i,popup) {\n      popup.select(\".title\").text(d.name || \"-\");\n      popup.select(\".value\").text(parseInt(100 * d.radius)/100);\n    });\n  },\n  parse: function() {\n    console.log(this.data[0]);\n    this.xRange = d3.extent(this.data.map(function(it) { return it.x; }));\n    this.yRange = d3.extent(this.data.map(function(it) { return it.y; }));\n    this.rRange = d3.extent(this.data.map(function(it) { return it.radius; }));\n    this.categories = d3.map(this.data, function(d) {return d.category || \"\"; }).keys();\n    if(this.xRange[0] == this.xRange[1]) this.xRange[1]++;\n    if(this.yRange[0] == this.yRange[1]) this.yRange[1]++;\n    if(this.rRange[0] == this.rRange[1]) this.rRange[1]++;\n  },\n  bind: function() {\n    var that = this,sel;\n    sel = this.svg.selectAll(\"circle.data\").data(this.data);\n    sel.exit().transition(\"exit\").duration(500).attr(\"opacity\", 0).remove();\n    sel = sel.enter().append(\"circle\").attr({class:\"data\"});\n    this.popup.nodes(sel);\n    sel = this.gridGroup.selectAll(\"line.grid.vertical\").data(this.xticks);\n    sel.exit().remove();\n    sel.enter().append(\"line\").attr({class: \"grid vertical\"});\n    sel = this.gridGroup.selectAll(\"line.grid.horizontal\").data(this.yticks);\n    sel.exit().remove();\n    sel.enter().append(\"line\").attr({class: \"grid horizontal\"});\n  },\n  resize: function() {\n    var that = this;\n    var box = this.root.getBoundingClientRect();\n    var svgbox = d3.select(this.root).select(\"svg\")[0][0].getBoundingClientRect();\n    var width = this.width = box.width;\n    var height = this.height = box.height;\n    var m = this.config.margin;\n    this.svg.attr({\n      width: width + \"px\", height: height + \"px\",\n      viewBox: [0,0,width,height].join(\" \"),\n      preserveAspectRatio: \"xMidYMid\"\n    });\n    this.maxRadius = this.config.bubbleSizeMax/2;\n    if(this.maxRadius > this.width / 30) this.maxRadius = this.width / 30;\n    if(this.maxRadius > this.height / 15) this.maxRadius = this.height / 15;\n    this.popup.fontSize(this.config.fontSize);\n    this.cScale = plotdb.Palette.scale.ordinal(this.config.palette);\n    this.legend = plotd3.rwd.legend().orient(\"right\")\n      .scale(this.cScale)\n      .label(this.config.legendLabel || \"\")\n      .tickValues(this.categories)\n      .size([this.width/2,this.height - 2 * this.config.margin - this.xAxisHeight])\n      .fontSize(this.config.fontSize);\n    this.legendGroup.call(this.legend);\n    this.legendGroup.selectAll(\".legend\").on(\"mouseover\", function(d,i) {\n      that.activeGroup = d; that.render();\n    }).on(\"mouseout\", function(d,i) {\n      that.activeGroup = null; that.render();\n    });\n    this.legendSize = (this.config.legendShow ? this.legend.offset() : [0,0]);\n    this.rScale = d3.scale.sqrt().domain([0,this.rRange[1]]).range([0, this.maxRadius]);\n    this.yScale = d3.scale.linear().domain(this.yRange).range([\n      height - this.maxRadius - m, this.maxRadius + m\n    ]);\n    this.yAxis = plotd3.rwd.axis().scale(this.yScale).orient(\"left\")\n      .fontSize(this.config.fontSize)\n      .label(this.config.yAxisLabel || \"\")\n      .labelPosition(this.config.yAxisLabelPosition)\n      .ticks(this.config.yAxisTickCount)\n      .tickSize(this.config.yAxisTickSizeInner, this.config.yAxisTickSizeOuter)\n      .tickPadding(this.config.yAxisTickPadding);\n    this.yAxisGroup.call(this.yAxis).select(\".domain\").remove();\n    this.yAxisWidth = (this.config.yAxisShow ? this.yAxis.offset() : 0);\n    this.yticks = this.yAxis.tickValues();\n    this.xScale = d3.scale.linear().domain(this.xRange).range([\n      this.yAxisWidth + this.maxRadius + m,\n      width - this.maxRadius - m - (this.config.legendShow ? this.legendSize[0] + this.config.fontSize : 0)\n    ]);\n    this.xAxis = plotd3.rwd.axis()\n      .scale(this.xScale)\n      .orient(\"bottom\")\n      .fontSize(this.config.fontSize)\n      .label(this.config.xAxisLabel || \"\")\n      .labelPosition(this.config.xAxisLabelPosition)\n      .tickSize(this.config.xAxisTickSizeInner, this.config.xAxisTickSizeOuter)\n      .tickPadding(this.config.xAxisTickPadding)\n      .ticks(this.config.xAxisTickCount);\n    this.xAxisGroup.call(this.xAxis).select(\".domain\").remove();\n    this.xAxisHeight = (this.config.xAxisShow ? this.xAxis.offset() : 0);\n    this.xticks = this.xAxis.tickValues();\n    this.yScale.range([ height - this.maxRadius - this.xAxisHeight - m, this.maxRadius + m ]);\n    this.yAxisGroup.call(this.yAxis).select(\".domain\").remove();\n  },\n  render: function() {\n    var that = this;\n    var m = this.config.margin;\n    if(this.config.fontFamily) d3.select(this.root).style(\"font-family\", this.config.fontFamily);\n    d3.select(this.root).style(\"background-color\", this.config.background);\n    this.svg.selectAll(\"text\").attr({\n      \"font-size\": that.config.fontSize,\n      \"fill\": that.config.textFill\n    });\n    this.frame.attr({\n      x: that.yAxisWidth + m,\n      y: m,\n      width: that.width - 2 * m - that.yAxisWidth - this.legendSize[0] - this.config.padding,\n      height: that.height - 2 * m - that.xAxisHeight,\n      fill: this.config.gridBackground,\n      stroke: this.config.gridFrameStroke,\n      \"stroke-width\": this.config.gridFrameStrokeWidth\n    });\n    this.frameInner.attr({\n      x: that.yAxisWidth + m + this.maxRadius,\n      y: m + this.maxRadius,\n      width: that.width - 2 * m - that.yAxisWidth - this.legendSize[0] - this.config.padding - 2 * this.maxRadius,\n      height: that.height - 2 * m - that.xAxisHeight - 2 * this.maxRadius,\n      fill: this.config.gridBackground,\n      stroke: this.config.gridFrameStroke,\n      \"stroke-width\": this.config.gridFrameStrokeWidth\n    });\n    this.legendGroup.attr({\n      transform: [\"translate(\", this.width - this.config.margin - this.legendSize[0], (this.height - this.legendSize[1] - this.xAxisHeight)/2, \")\"].join(\" \"),\n      display: this.config.legendShow ? \"block\" : \"none\"\n    });\n    this.xAxisGroup.attr({\n      transform: [\"translate(\", 0, \",\", this.height - this.xAxisHeight - m,\")\"].join(\"\"),\n      display: this.config.xAxisShow ? \"block\" : \"none\"\n    });\n    this.yAxisGroup.attr({\n      transform: [\"translate(\", this.yAxisWidth + m , \",\", 0 ,\")\"].join(\"\"),\n      display: this.config.yAxisShow ? \"block\" : \"none\"\n    });\n    this.yAxisGroup.selectAll(\"path,line\").attr({ stroke: that.config.yAxisStroke });\n    this.xAxisGroup.selectAll(\"path,line\").attr({ stroke: that.config.xAxisStroke });\n    this.svg.selectAll(\"circle.data\").filter(function(d,i) { return !d3.select(this).attr(\"fill\"); }).attr({\n      fill: function(it) { return that.cScale(it.category); },\n      stroke: that.config.bubbleStroke, \n      opacity: 0\n    });\n    this.svg.selectAll(\"circle.data\").transition(\"morph\").duration(500).attr({\n      cx: function(it) { return that.xScale(it.x); },\n      cy: function(it) { return that.yScale(it.y); },\n      r: function(it) { return that.rScale(it.radius); },\n      \"stroke-width\": that.config.bubbleStrokeWidth\n    });\n    this.svg.selectAll(\"circle.data\").transition().duration(500).attr({\n      opacity: function(d,i) {\n        return (that.activeGroup == null || that.activeGroup == d.category ? 0.9 : 0.1);\n      }\n    });\n    this.gridGroup.selectAll(\"line\").attr({\n      stroke: this.config.gridStroke,\n      \"stroke-dasharray\": this.config.gridDashArray,\n      \"stroke-width\": this.config.gridStrokeWidth,\n      display: (this.config.gridShow ? \"block\" : \"none\")\n    });\n    this.gridGroup.selectAll(\"line.grid.vertical\").attr({\n      x1: function(it) { return that.xScale(it); },\n      x2: function(it) { return that.xScale(it); },\n      y1: that.yScale(that.yRange[0]),\n      y2: that.yScale(that.yRange[1])\n    });\n    this.gridGroup.selectAll(\"line.grid.horizontal\").attr({\n      y1: function(it) { return that.yScale(it); },\n      y2: function(it) { return that.yScale(it); },\n      x1: that.xScale(that.xRange[0]),\n      x2: that.xScale(that.xRange[1])\n    });\n  }\n}"},"assets":[],"config":{"fontFamily":{"name":"Font","type":[{"name":"String","default":"","level":2,"basetype":[]}],"default":"Arial","category":"Global Settings","value":"Arial"},"background":{"name":"Background","type":[{"name":"Color","level":10,"default":"#dc4521","Gray":"#cccccc","Positive":"#3f7ab5","Negative":"#d93510","Neutral":"#cccccc","Empty":"#ffffff","subtype":{"negative":"negative","positive":"positive","neutral":"neutral"}}],"default":"#ffffff","category":"Global Settings","value":"#ffffff"},"textFill":{"name":"Text Color","type":[{"name":"Color","level":10,"default":"#dc4521","Gray":"#cccccc","Positive":"#3f7ab5","Negative":"#d93510","Neutral":"#cccccc","Empty":"#ffffff","subtype":{"negative":"negative","positive":"positive","neutral":"neutral"}}],"default":"#000000","category":"Global Settings","value":"#000000"},"fontSize":{"name":"Font Size","type":[{"name":"Number","default":0,"level":8,"basetype":[{"name":"Numstring","default":"","level":6,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"order":{}}],"default":13,"category":"Global Settings","value":"12"},"margin":{"name":"Margin","type":[{"name":"Number","default":0,"level":8,"basetype":[{"name":"Numstring","default":"","level":6,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"order":{}}],"default":10,"category":"Global Settings","value":10},"padding":{"name":"Padding","type":[{"name":"Number","default":0,"level":8,"basetype":[{"name":"Numstring","default":"","level":6,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"order":{}}],"default":10,"category":"Global Settings","value":10},"palette":{"name":"Palette","type":[{"name":"Palette","level":30,"re":{},"default":{"colors":[{"hex":"#1d3263"},{"hex":"#226c87"},{"hex":"#f8d672"},{"hex":"#e48e11"},{"hex":"#e03215"},{"hex":"#ab2321"}]},"plotdb":{"colors":[{"hex":"#ed1d78"},{"hex":"#c59b6d"},{"hex":"#8cc63f"},{"hex":"#28aae2"}]},"qualitative":{"colors":[{"hex":"#c05ae0"},{"hex":"#cf2d0c"},{"hex":"#e9ab1e"},{"hex":"#86ffb5"},{"hex":"#64dfff"},{"hex":"#003f7d"}]},"binary":{"colors":[{"hex":"#ff8356"},{"hex":"#0076a1"}]},"sequential":{"colors":[{"hex":"#950431"},{"hex":"#be043e"},{"hex":"#ec326d"},{"hex":"#fc82a9"},{"hex":"#febed2"},{"hex":"#fee6ee"}]},"diverging":{"colors":[{"hex":"#74001a"},{"hex":"#cd2149"},{"hex":"#f23971"},{"hex":"#ff84ab"},{"hex":"#ffc3d7"},{"hex":"#f2f2dd"},{"hex":"#b8d9ed"},{"hex":"#81b1d0"},{"hex":"#3d8bb7"},{"hex":"#0071a8"},{"hex":"#003558"}]},"subtype":{"qualitative":"qualitative","binary":"binary","sequential":"sequential","diverging":"diverging"},"scale":{}}],"default":{"colors":[{"hex":"#f4502a"},{"hex":"#f1c227"},{"hex":"#008a6d"},{"hex":"#00acdb"},{"hex":"#0064a8"}]},"category":"Global Settings","value":{"colors":[{"hex":"#b43743"},{"hex":"#e68061"},{"hex":"#f9cb48"},{"hex":"#3c6a9c"},{"hex":"#0c2a54"},{"hex":"#405067"},{"hex":"#5a5e84"}]}},"legendShow":{"name":"Show Legend","type":[{"name":"Boolean","default":true,"level":8,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"default":true,"category":"Legend","value":false},"legendLabel":{"name":"Label","type":[{"name":"String","default":"","level":2,"basetype":[]}],"category":"Legend"},"bubbleStroke":{"name":"Stroke Color","type":[{"name":"Color","level":10,"default":"#dc4521","Gray":"#cccccc","Positive":"#3f7ab5","Negative":"#d93510","Neutral":"#cccccc","Empty":"#ffffff","subtype":{"negative":"negative","positive":"positive","neutral":"neutral"}}],"default":"#c01d1d","category":"Bubble","value":"#919191"},"bubbleStrokeWidth":{"name":"Stroke Width","type":[{"name":"Number","default":0,"level":8,"basetype":[{"name":"Numstring","default":"","level":6,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"order":{}}],"default":"1","category":"Bubble","value":"0"},"bubbleSizeMax":{"name":"Max Size","type":[{"name":"Number","default":0,"level":8,"basetype":[{"name":"Numstring","default":"","level":6,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"order":{}}],"default":20,"category":"Bubble","value":"24"},"gridBackground":{"name":"Background","type":[{"name":"Color","level":10,"default":"#dc4521","Gray":"#cccccc","Positive":"#3f7ab5","Negative":"#d93510","Neutral":"#cccccc","Empty":"#ffffff","subtype":{"negative":"negative","positive":"positive","neutral":"neutral"}}],"default":"#fff","category":"Grid","value":"#ffffff"},"gridStroke":{"name":"Color","type":[{"name":"Color","level":10,"default":"#dc4521","Gray":"#cccccc","Positive":"#3f7ab5","Negative":"#d93510","Neutral":"#cccccc","Empty":"#ffffff","subtype":{"negative":"negative","positive":"positive","neutral":"neutral"}}],"default":"#ccc","category":"Grid","value":"#cccccc"},"gridStrokeWidth":{"name":"Stroke Width","type":[{"name":"Number","default":0,"level":8,"basetype":[{"name":"Numstring","default":"","level":6,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"order":{}}],"default":1,"category":"Grid","value":"01"},"gridShow":{"name":"Show Grid","type":[{"name":"Boolean","default":true,"level":8,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"default":true,"category":"Grid","value":true},"gridDashArray":{"name":"Dash Style","type":[{"name":"String","default":"","level":2,"basetype":[]}],"default":"2 4","category":"Grid","desc":"SVG style dash array. '2 4' means 2px line and 4px space.","value":"2 4"},"gridFrameStroke":{"name":"Frame Color","type":[{"name":"Color","level":10,"default":"#dc4521","Gray":"#cccccc","Positive":"#3f7ab5","Negative":"#d93510","Neutral":"#cccccc","Empty":"#ffffff","subtype":{"negative":"negative","positive":"positive","neutral":"neutral"}}],"default":"#ccc","category":"Grid","value":"#e4e4e4"},"gridFrameStrokeWidth":{"name":"Frame Width","type":[{"name":"Number","default":0,"level":8,"basetype":[{"name":"Numstring","default":"","level":6,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"order":{}}],"default":3,"category":"Grid","value":"0"},"yAxisShow":{"name":"Show Axis","type":[{"name":"Boolean","default":true,"level":8,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"default":true,"category":"Y Axis","value":true},"yAxisLabel":{"name":"Label","type":[{"name":"String","default":"","level":2,"basetype":[]}],"default":"","category":"Y Axis","value":""},"yAxisTickSizeInner":{"name":"Inner Tick Size","type":[{"name":"Number","default":0,"level":8,"basetype":[{"name":"Numstring","default":"","level":6,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"order":{}}],"default":4,"category":"Y Axis","value":4},"yAxisTickSizeOuter":{"name":"Outer Tick Size","type":[{"name":"Number","default":0,"level":8,"basetype":[{"name":"Numstring","default":"","level":6,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"order":{}}],"default":0,"category":"Y Axis","value":0},"yAxisTickPadding":{"name":"Tick Padding","type":[{"name":"Number","default":0,"level":8,"basetype":[{"name":"Numstring","default":"","level":6,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"order":{}}],"default":4,"category":"Y Axis","value":4},"yAxisTickCount":{"name":"Tick Count","type":[{"name":"Number","default":0,"level":8,"basetype":[{"name":"Numstring","default":"","level":6,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"order":{}}],"default":6,"category":"Y Axis","desc":"Hint on number of tick. Actual number will be decided by program","value":6},"yAxisLabelPosition":{"name":"Label Position","type":[{"default":"","name":"Choice","level":20,"values":["in","center"]}],"default":"center","category":"Y Axis","value":"center"},"yAxisStroke":{"name":"Stroke Color","type":[{"name":"Color","level":10,"default":"#dc4521","Gray":"#cccccc","Positive":"#3f7ab5","Negative":"#d93510","Neutral":"#cccccc","Empty":"#ffffff","subtype":{"negative":"negative","positive":"positive","neutral":"neutral"}}],"default":"#000","category":"Y Axis","value":"#000000"},"xAxisShow":{"name":"Show Axis","type":[{"name":"Boolean","default":true,"level":8,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"default":true,"category":"X Axis","value":true},"xAxisLabel":{"name":"Label","type":[{"name":"String","default":"","level":2,"basetype":[]}],"default":"","category":"X Axis","value":""},"xAxisTickSizeInner":{"name":"Inner Tick Size","type":[{"name":"Number","default":0,"level":8,"basetype":[{"name":"Numstring","default":"","level":6,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"order":{}}],"default":4,"category":"X Axis","value":4},"xAxisTickSizeOuter":{"name":"Outer Tick Size","type":[{"name":"Number","default":0,"level":8,"basetype":[{"name":"Numstring","default":"","level":6,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"order":{}}],"default":0,"category":"X Axis","value":0},"xAxisTickPadding":{"name":"Tick Padding","type":[{"name":"Number","default":0,"level":8,"basetype":[{"name":"Numstring","default":"","level":6,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"order":{}}],"default":4,"category":"X Axis","value":4},"xAxisTickCount":{"name":"Tick Count","type":[{"name":"Number","default":0,"level":8,"basetype":[{"name":"Numstring","default":"","level":6,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"order":{}}],"default":6,"category":"X Axis","desc":"Hint on number of tick. Actual number will be decided by program","value":6},"xAxisStroke":{"name":"Stroke Color","type":[{"name":"Color","level":10,"default":"#dc4521","Gray":"#cccccc","Positive":"#3f7ab5","Negative":"#d93510","Neutral":"#cccccc","Empty":"#ffffff","subtype":{"negative":"negative","positive":"positive","neutral":"neutral"}}],"default":"#000","category":"X Axis","value":"#000000"},"xAxisLabelPosition":{"name":"Label Position","type":[{"default":"","name":"Choice","level":20,"values":["in","center"]}],"default":"center","category":"X Axis","value":"center"}},"dimlen":5,"dimension":{"radius":{"type":[{"name":"Number","default":0,"level":8,"basetype":[{"name":"Numstring","default":"","level":6,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"order":{}}],"require":true,"desc":"radius of circle","fields":[]},"x":{"type":[{"name":"Number","default":0,"level":8,"basetype":[{"name":"Numstring","default":"","level":6,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"order":{}}],"require":true,"desc":"x axis of circle","fields":[]},"y":{"type":[{"name":"Number","default":0,"level":8,"basetype":[{"name":"Numstring","default":"","level":6,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"order":{}}],"require":true,"desc":"y axis of circle","fields":[]},"category":{"type":[],"require":false,"desc":"category of circle","fields":[]},"name":{"type":[],"require":false,"desc":"name of circle","fields":[]}},"library":["d3/3.5.12/min","plotd3/0.1.0"],"ownername":"plotdb","createdtime":"2016-03-07T08:11:54.000Z","modifiedtime":"2016-09-27T20:36:37.000Z","local":null,"inherit":[],"data":[]}